{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _CreateAccountScreen = _interopRequireDefault(require(\"../screens/UserList/CreateAccountScreen\"));\n\nvar _LoginScreen = _interopRequireDefault(require(\"../screens/UserList/LoginScreen\"));\n\nvar _FontAwesome = _interopRequireDefault(require(\"react-native-vector-icons/FontAwesome\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hevo_\\\\Desktop\\\\Lavoro\\\\src\\\\navigation\\\\AuthStack.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Stack = (0, _stack.createStackNavigator)();\n\nvar AuthStack = function AuthStack() {\n  var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isFirstLaunch = _useState2[0],\n      setIsFisrtLaunch = _useState2[1];\n\n  var routeName;\n  (0, _react.useEffect)(function () {\n    _asyncStorage.default.getItem('alreadyLaunched').then(function (value) {\n      if (value == null) {\n        _asyncStorage.default.setItem('alreadyLaunched', 'true');\n\n        setIsFisrtLaunch(true);\n      } else {\n        setIsFisrtLaunch(false);\n      }\n    });\n  }, []);\n\n  if (isFirstLaunch === null) {\n    return null;\n  } else {\n    routeName = 'Login';\n  }\n\n  ;\n  return _react.default.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: _LoginScreen.default,\n    options: {\n      header: function header() {\n        return null;\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"CreateAccount\",\n    component: _CreateAccountScreen.default,\n    options: function options(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        title: '',\n        headerStyle: {\n          backgroundColor: '#f9fafd',\n          shadowColor: '#f9fafd',\n          elevation: 0\n        },\n        headerLeft: function headerLeft() {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              marginLeft: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }\n          }, _react.default.createElement(_FontAwesome.default.Button, {\n            name: \"long-arrow-left\",\n            size: 25,\n            backgroundColor: \"#f9fafd\",\n            color: \"#333\",\n            onPress: function onPress() {\n              return navigation.navigate('Login');\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }\n          }));\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar _default = AuthStack;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/hevo_/Desktop/Lavoro/src/navigation/AuthStack.js"],"names":["Stack","AuthStack","isFirstLaunch","setIsFisrtLaunch","routeName","AsyncStorage","getItem","then","value","setItem","LoginScreen","header","CreateAccountScreen","navigation","title","headerStyle","backgroundColor","shadowColor","elevation","headerLeft","marginLeft","navigate"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,kCAAd;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,kBACoB,qBAAS,IAAT,CADpB;AAAA;AAAA,MACfC,aADe;AAAA,MACAC,gBADA;;AAEtB,MAAIC,SAAJ;AACA,wBAAU,YAAM;AACdC,0BAAaC,OAAb,CAAqB,iBAArB,EAAwCC,IAAxC,CAA6C,UAAAC,KAAK,EAAI;AACpD,UAAIA,KAAK,IAAI,IAAb,EAAmB;AACjBH,8BAAaI,OAAb,CAAqB,iBAArB,EAAwC,MAAxC;;AACAN,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,OAHD,MAGO;AACLA,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,KAPD;AAQD,GATD,EASG,EATH;;AAUA,MAAID,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WAAO,IAAP;AACD,GAFD,MAEO;AACLE,IAAAA,SAAS,GAAG,OAAZ;AACD;;AAAA;AAED,SACE,6BAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAEM,oBAFb;AAGE,IAAA,OAAO,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAA,eAAM,IAAN;AAAA;AAAT,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,SAAS,EAAEC,4BAFb;AAGE,IAAA,OAAO,EAAE;AAAA,UAAEC,UAAF,QAAEA,UAAF;AAAA,aAAmB;AAC1BC,QAAAA,KAAK,EAAE,EADmB;AAE1BC,QAAAA,WAAW,EAAE;AACXC,UAAAA,eAAe,EAAE,SADN;AAEXC,UAAAA,WAAW,EAAE,SAFF;AAGXC,UAAAA,SAAS,EAAE;AAHA,SAFa;AAO1BC,QAAAA,UAAU,EAAE;AAAA,iBACV,6BAAC,iBAAD;AAAM,YAAA,KAAK,EAAE;AAACC,cAAAA,UAAU,EAAE;AAAb,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,6BAAC,oBAAD,CAAa,MAAb;AACE,YAAA,IAAI,EAAC,iBADP;AAEE,YAAA,IAAI,EAAE,EAFR;AAGE,YAAA,eAAe,EAAC,SAHlB;AAIE,YAAA,KAAK,EAAC,MAJR;AAKE,YAAA,OAAO,EAAE;AAAA,qBAAMP,UAAU,CAACQ,QAAX,CAAoB,OAApB,CAAN;AAAA,aALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADU;AAAA;AAPc,OAAnB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAiCD,CApDD;;eAsDepB,S","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {View} from 'react-native';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport CreateAccountScreen from '../screens/UserList/CreateAccountScreen';\r\nimport LoginScreen from '../screens/UserList/LoginScreen';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst AuthStack = () => {\r\n  const [isFirstLaunch, setIsFisrtLaunch] = useState(null);\r\n  let routeName;\r\n  useEffect(() => {\r\n    AsyncStorage.getItem('alreadyLaunched').then(value => {\r\n      if (value == null) {\r\n        AsyncStorage.setItem('alreadyLaunched', 'true');\r\n        setIsFisrtLaunch(true);\r\n      } else {\r\n        setIsFisrtLaunch(false);\r\n      }\r\n    });\r\n  }, []);\r\n  if (isFirstLaunch === null) {\r\n    return null;\r\n  } else {\r\n    routeName = 'Login';\r\n  };\r\n\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Login\"\r\n        component={LoginScreen}\r\n        options={{header: () => null}}\r\n      />\r\n      <Stack.Screen\r\n        name=\"CreateAccount\"\r\n        component={CreateAccountScreen}\r\n        options={({navigation}) => ({\r\n          title: '',\r\n          headerStyle: {\r\n            backgroundColor: '#f9fafd',\r\n            shadowColor: '#f9fafd',\r\n            elevation: 0,\r\n          },\r\n          headerLeft: () => (\r\n            <View style={{marginLeft: 10}}>\r\n              <FontAwesome.Button\r\n                name=\"long-arrow-left\"\r\n                size={25}\r\n                backgroundColor=\"#f9fafd\"\r\n                color=\"#333\"\r\n                onPress={() => navigation.navigate('Login')}\r\n              />\r\n            </View>\r\n          ),\r\n        })}\r\n      />\r\n\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default AuthStack;\r\n"]},"metadata":{},"sourceType":"script"}