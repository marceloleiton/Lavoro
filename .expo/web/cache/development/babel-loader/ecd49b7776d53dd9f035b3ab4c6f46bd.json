{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = PlatformPressable;\n\nvar _extends3 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar ANDROID_VERSION_LOLLIPOP = 21;\nvar ANDROID_SUPPORTS_RIPPLE = _reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\nfunction PlatformPressable(_ref) {\n  var android_ripple = _ref.android_ripple,\n      _ref$pressColor = _ref.pressColor,\n      pressColor = _ref$pressColor === void 0 ? 'rgba(0, 0, 0, .32)' : _ref$pressColor,\n      pressOpacity = _ref.pressOpacity,\n      _style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"android_ripple\", \"pressColor\", \"pressOpacity\", \"style\"]);\n  return React.createElement(_reactNative.Pressable, _extends({\n    android_ripple: ANDROID_SUPPORTS_RIPPLE ? (0, _extends3.default)({\n      color: pressColor\n    }, android_ripple) : undefined,\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return [{\n        opacity: pressed && !ANDROID_SUPPORTS_RIPPLE ? pressOpacity : 1\n      }, typeof _style === 'function' ? _style({\n        pressed: pressed\n      }) : _style];\n    }\n  }, rest));\n}","map":{"version":3,"sources":["PlatformPressable.tsx"],"names":["ANDROID_VERSION_LOLLIPOP","ANDROID_SUPPORTS_RIPPLE","Platform","pressColor","rest","color","android_ripple","pressed","opacity","style"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAMA,wBAAwB,GAA9B,EAAA;AACA,IAAMC,uBAAuB,GAC3BC,sBAAAA,EAAAA,KAAAA,SAAAA,IAA6BA,sBAAAA,OAAAA,IAD/B,wBAAA;;AAUe,SAAA,iBAAA,OAML;AAAA,MANgC,cAMhC,QANgC,cAMhC;AAAA,6BAJRC,UAIQ;AAAA,MAJRA,UAIQ,gCANgC,oBAMhC;AAAA,MANgC,YAMhC,QANgC,YAMhC;AAAA,MANgC,MAMhC,QANgC,KAMhC;AAAA,MADLC,IACK;AACR,SACE,KAAA,CAAA,aAAA,CAAA,sBAAA,EAAA,QAAA,CAAA;AACE,IAAA,cAAc,EACZH,uBAAuB;AACjBI,MAAAA,KAAK,EAAP;AADmB,OACKC,cADL,IAF3B,SAAA;AAME,IAAA,KAAK,EAAE;AAAA,UAAGC,OAAH,SAAGA,OAAH;AAAA,aAAiB,CACtB;AAAEC,QAAAA,OAAO,EAAED,OAAO,IAAI,CAAXA,uBAAAA,GAAAA,YAAAA,GAAqD;AAAhE,OADsB,EAEtB,OAAA,MAAA,KAAA,UAAA,GAA8BE,MAAK,CAAC;AAAEF,QAAAA,OAAAA,EAAAA;AAAF,OAAD,CAAnC,GAFsB,MAAA,CAAjB;AAAA;AANT,GAAA,EADF,IACE,CAAA,CADF;AAcD","sourcesContent":["import * as React from 'react';\nimport { Platform, Pressable, PressableProps } from 'react-native';\n\nexport type Props = PressableProps & {\n  pressColor?: string;\n  pressOpacity?: number;\n  children: React.ReactNode;\n};\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\n/**\n * PlatformPressable provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity to handle platform differences.\n *\n * On Android, you can pass the props of TouchableNativeFeedback.\n * On other platforms, you can pass the props of TouchableOpacity.\n */\nexport default function PlatformPressable({\n  android_ripple,\n  pressColor = 'rgba(0, 0, 0, .32)',\n  pressOpacity,\n  style,\n  ...rest\n}: Props) {\n  return (\n    <Pressable\n      android_ripple={\n        ANDROID_SUPPORTS_RIPPLE\n          ? { color: pressColor, ...android_ripple }\n          : undefined\n      }\n      style={({ pressed }) => [\n        { opacity: pressed && !ANDROID_SUPPORTS_RIPPLE ? pressOpacity : 1 },\n        typeof style === 'function' ? style({ pressed }) : style,\n      ]}\n      {...rest}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"script"}