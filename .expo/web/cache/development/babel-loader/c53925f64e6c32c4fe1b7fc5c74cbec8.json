{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _SuggestionRow = _interopRequireDefault(require(\"./SuggestionRow\"));\n\nvar _search = _interopRequireDefault(require(\"../../../assets/data/search\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _reactNativeGooglePlacesAutocomplete = require(\"react-native-google-places-autocomplete\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hevo_\\\\Desktop\\\\Lavoro\\\\src\\\\screens\\\\DestinationSearch\\\\index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar DestinationSearchScreen = function DestinationSearchScreen(props) {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      inputText = _useState2[0],\n      setInputText = _useState2[1];\n\n  var navigation = (0, _native.useNavigation)();\n  return _react.default.createElement(_reactNative.View, {\n    style: _styles.default.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNativeGooglePlacesAutocomplete.GooglePlacesAutocomplete, {\n    placeholder: \"Buscar\",\n    onPress: function onPress(data) {\n      var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      console.log(data, details);\n      navigation.navigate('FiltersScreen');\n    },\n    fetchDetails: true,\n    styles: {\n      textInput: _styles.default.textInput\n    },\n    query: {\n      key: 'AIzaSyBs06EkRd01BNnDFCfZ2BUZOFKgr9x3Fd4',\n      language: 'es',\n      type: '(cities)',\n      components: 'country:cl'\n    },\n    suppressDefaultStyles: true,\n    renderRow: function renderRow(item) {\n      return _react.default.createElement(_SuggestionRow.default, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 47\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar _default = DestinationSearchScreen;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/hevo_/Desktop/Lavoro/src/screens/DestinationSearch/index.js"],"names":["DestinationSearchScreen","props","inputText","setInputText","navigation","styles","container","data","details","console","log","navigate","textInput","key","language","type","components","item"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AAEA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK,EAAI;AAAA,kBACL,qBAAS,EAAT,CADK;AAAA;AAAA,MAChCC,SADgC;AAAA,MACrBC,YADqB;;AAEvC,MAAMC,UAAU,GAAG,4BAAnB;AACA,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,gBAAOC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,6BAAC,6DAAD;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,OAAO,EAAE,iBAACC,IAAD,EAA0B;AAAA,UAAnBC,OAAmB,uEAAT,IAAS;AAEjCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,OAAlB;AACAJ,MAAAA,UAAU,CAACO,QAAX,CAAoB,eAApB;AACD,KANH;AAOE,IAAA,YAAY,MAPd;AAQE,IAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAEP,gBAAOO;AADZ,KARV;AAWE,IAAA,KAAK,EAAE;AACLC,MAAAA,GAAG,EAAE,yCADA;AAELC,MAAAA,QAAQ,EAAE,IAFL;AAGLC,MAAAA,IAAI,EAAE,UAHD;AAILC,MAAAA,UAAU,EAAE;AAJP,KAXT;AAiBE,IAAA,qBAAqB,MAjBvB;AAkBE,IAAA,SAAS,EAAE,mBAACC,IAAD;AAAA,aAA2B,6BAAC,sBAAD;AAAe,QAAA,IAAI,EAAEA,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B;AAAA,KAlBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AA0BD,CA7BD;;eA+BejB,uB","sourcesContent":["import React, {useState} from 'react';\r\nimport {View, TextInput, FlatList, Text, Pressable} from 'react-native';\r\nimport styles from './styles';\r\nimport SuggestionRow from './SuggestionRow';\r\nimport SearchResults from '../../../assets/data/search';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {GooglePlacesAutocomplete} from 'react-native-google-places-autocomplete';\r\n\r\nconst DestinationSearchScreen = props => {\r\n  const [inputText, setInputText] = useState('');\r\n  const navigation = useNavigation();\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Input component*/}\r\n\r\n      <GooglePlacesAutocomplete\r\n        placeholder=\"Buscar\"\r\n        onPress={(data, details = null) => {\r\n          // 'details' is provided when fetchDetails = true\r\n          console.log(data, details);\r\n          navigation.navigate('FiltersScreen');\r\n        }}\r\n        fetchDetails\r\n        styles={{\r\n          textInput: styles.textInput,\r\n        }}\r\n        query={{\r\n          key: 'AIzaSyBs06EkRd01BNnDFCfZ2BUZOFKgr9x3Fd4',\r\n          language: 'es',\r\n          type: '(cities)',\r\n          components: 'country:cl',\r\n        }}\r\n        suppressDefaultStyles\r\n        renderRow={(item: GooglePlaceData) => <SuggestionRow item={item} />}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DestinationSearchScreen;\r\n"]},"metadata":{},"sourceType":"script"}